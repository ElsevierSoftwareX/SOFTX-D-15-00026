class SkinSensor
# Skinware
version version 2.0.0
author Shahbaz Youssefi
keyword skin
keyword middleware
keyword skinware
keyword skin++
keyword C++
keyword MacLAB
shortcut index
shortcut globals
shortcut constants
previous class Skin
next class SkinModule
seealso `[SkinModule]`
seealso `[SkinPatch]`
seealso `[Skin::forEachSensor](Skin#forEachX)`

This is a C++ interface to `[skin_sensor]`.

FUNCTION isValid: (): bool
	Whether the object is valid

	This function tells whether this object is valid.

	OUTPUT
		Returns true if the object is valid and can be used.

FUNCTION getId: (): SkinSensorId
	Get id of the sensor

	See `[skin_sensor::id](skin_sensor#id)`.

	OUTPUT
		Returns id of this sensor.

FUNCTION getUniqueId: (): SkinSensorUniqueId
	Get unique id of sensor

	See `[skin_sensor::uid](skin_sensor#uid)`.

	OUTPUT
		Returns unique id of this sensor.

FUNCTION getResponse: (): SkinSensorResponse
	Get response value of the sensor

	See `[skin_sensor_get_response](skin_sensor#skin_sensor_get_response)`.

	OUTPUT
		Returns the response value of this sensor.

FUNCTION getType: (): SkinSensorTypeId
	Get sensor type of the sensor

	See `[skin_sensor::type](skin_sensor#type)`.

	OUTPUT
		Returns the type this sensor belongs to.

FUNCTION getModule: (): SkinModuleId
	Get the module this sensor belongs to

	See `[skin_sensor_get_module](skin_sensor#skin_sensor_get_module)`.

	OUTPUT
		Returns the module this sensor belongs to.

FUNCTION getPatch: (): SkinPatchId
	Get the patch this sensor belongs to

	See `[skin_sensor_get_patch](skin_sensor#skin_sensor_get_patch)`.

	OUTPUT
		Returns the patch this sensor belongs to.

FUNCTION getUser: (): skinUser
	Get user this sensor belongs to

	See `[skin_sensor::user](skin_sensor#user)`.

	OUTPUT
		Returns the user this sensor belongs to.

FUNCTION getSkin: (): Skin
	Return main skin object

	This function returns a reference to the main skin object.

	OUTPUT
		Returns a reference to the main skin object.

FUNCTION setUserData: (data: void *): void
	Set arbitrary data

	Set `[skin_sensor::user_data](skin_sensor#user_data)`.

	INPUT data
		Arbitrary data to be carried by this sensor

FUNCTION getUserData: (): void *
	Get previously set data

	Get `[skin_sensor::user_data](skin_sensor#user_data)`.

	OUTPUT
		Returns the previously set pointer.
